#!/bin/sh
#
#
echo "1"
sed -i "/; TODO: this creates an error when used with z3?/d" $1
echo "1"
sed -i "/; logic$/d" $1
echo "1"
sed -i "/set-info :smt-lib-version 2.6/d" $1
echo "1"
sed -i "/set-logic QF_AUFBV/d" $1
echo "1"
sed -i "/set-info :source |/d" $1
echo "1"
sed -i "/Generator: hevm/d" $1
echo "1"
sed -i "/Application: hevm symbolic execution system/d" $1
echo "1"
sed -i "/|/d" $1
echo "1"
sed -i "/set-info :category \"industrial\"/d" $1

echo '(set-info :smt-lib-version 2.6)
(set-logic QF_AUFBV)
(set-info :source |
Generated by: Alexis Terry, Mate Soos, Zoe Paraskevopoulou
Generated on: 2024-01-17
Generator: hevm
Application: hevm symbolic execution to find bugs
Target solver: CVC5
Benchmarks generated by the hevm symbolic execution tool to find bugs
in EVM bytecode. The original Solidity/YUL code can be found at
https://github.com/eth-sc-comp/benchmarks To exactly re-create these
files, run:

git clone https://github.com/eth-sc-comp/benchmarks
cd benchmarks
git checkout e8a6f2485170
nix-develop
./bench.py --tools=hevm-z3 -t 50 --dumpsmt

Note that nix-develop above will make sure to recreate the
exact conditions to be able to recreate these files, including
the exact compiler, hevm, and Z3 executable.
|)
(set-info:license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)' > $1-cleaned
cat $1 >> $1-cleaned

echo "
(exit)" >> $1-cleaned
